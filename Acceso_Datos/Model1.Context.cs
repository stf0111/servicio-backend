//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Acceso_Datos
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class EntitiesSuple : DbContext
    {
        public EntitiesSuple()
            : base("name=EntitiesSuple")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<BODEGA> BODEGA { get; set; }
        public virtual DbSet<CLIENTE> CLIENTE { get; set; }
        public virtual DbSet<FACTURA> FACTURA { get; set; }
        public virtual DbSet<PRODUCTO> PRODUCTO { get; set; }
        public virtual DbSet<PRODUCTO_BODEGA> PRODUCTO_BODEGA { get; set; }
        public virtual DbSet<PRODUCTO_FACTURA> PRODUCTO_FACTURA { get; set; }
        public virtual DbSet<PRODUCTO_PROVEEDOR> PRODUCTO_PROVEEDOR { get; set; }
        public virtual DbSet<PROVEEDOR> PROVEEDOR { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<VENDEDOR> VENDEDOR { get; set; }
    
        public virtual ObjectResult<GetTopVendedorPorMes_Result> GetTopVendedorPorMes(Nullable<int> year, Nullable<int> month)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTopVendedorPorMes_Result>("GetTopVendedorPorMes", yearParameter, monthParameter);
        }
    
        public virtual ObjectResult<Proc_Ganancia_Mensual_Result> Proc_Ganancia_Mensual(Nullable<int> year, Nullable<int> month)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_Ganancia_Mensual_Result>("Proc_Ganancia_Mensual", yearParameter, monthParameter);
        }
    
        public virtual ObjectResult<Proc_Ingresos_Mes_Anio_Result> Proc_Ingresos_Mes_Anio()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_Ingresos_Mes_Anio_Result>("Proc_Ingresos_Mes_Anio");
        }
    
        public virtual ObjectResult<Proc_Inventario_Total_Result> Proc_Inventario_Total()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_Inventario_Total_Result>("Proc_Inventario_Total");
        }
    
        public virtual ObjectResult<Proc_Productos_Caducar_Result> Proc_Productos_Caducar()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_Productos_Caducar_Result>("Proc_Productos_Caducar");
        }
    
        public virtual ObjectResult<Proc_ProductosVendidosPorFecha_Result> Proc_ProductosVendidosPorFecha(Nullable<int> year, Nullable<int> month)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_ProductosVendidosPorFecha_Result>("Proc_ProductosVendidosPorFecha", yearParameter, monthParameter);
        }
    
        public virtual ObjectResult<ProductosMasVendidos_Result> ProductosMasVendidos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProductosMasVendidos_Result>("ProductosMasVendidos");
        }
    
        public virtual ObjectResult<ProductosMenosVendidos_Result> ProductosMenosVendidos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProductosMenosVendidos_Result>("ProductosMenosVendidos");
        }
    
        public virtual ObjectResult<ProveedoresConMasVentas_Result> ProveedoresConMasVentas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProveedoresConMasVentas_Result>("ProveedoresConMasVentas");
        }
    }
}
